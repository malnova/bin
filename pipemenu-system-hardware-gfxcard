#!/bin/bash
. default-commands
. pipemenu-system-functions

echo "<openbox_pipe_menu>"

unset is_gfxcard
if [ -e "${default_path}hwinfo" ]; then
    # Requiert l'installation du paquet hwinfo
    unset gfxcards
    gfxcards="$(${default_path}hwinfo --gfxcard | sed -e '$a\ ' | awk -v RS="" -F'\n' -v OFS=" -,-,- " '{$1=$1} 1' | sed -r "s/ +([[:digit:]-]+)$/, \1/; s/ -,-,- +/${end_delimiter}/g" | grep -E '^[0-9]+: ' | sed 's/[^ ]* //' | sort)"
    gfxcard_nb=0
    while IFS= read -r line; do
        declare -a gfxcard_connector
        gfxcard_connector[$gfxcard_nb]=$(echo "$line" | grep -ioP '^\s*\K.*' | awk '{print $1}')
        if [ ! -z "${gfxcard_connector[$gfxcard_nb]}" ]; then
            is_gfxcard=1
            gfxcard_connector[$gfxcard_nb]=$(sanityse_output "${gfxcard_connector[$gfxcard_nb]}")
            if [ "$gfxcard_nb" -eq 0 ] || [ "${gfxcard_connector[$gfxcard_nb]}" != "${gfxcard_connector[$gfxcard_nb-1]}" ]; then
                echo "<separator label=\"Port ${gfxcard_connector[gfxcard_nb]}\" />"
            elif [ "$z" -gt 0 ]; then
                z=0
                echo "<separator />"
            fi
            ((z++))
            ((gfxcard_nb++))
        fi
        unset gfxcard_model
        gfxcard_model=$(str_str "$line" "Model:")
        if [ ! -z "$gfxcard_model" ]; then
            is_gfxcard=1
            gfxcard_model=$(sanityse_output "$gfxcard_model")
            echo "<item label=\"Modèle : $gfxcard_model\" />"
            ((z++))
        fi
        unset gfxcard_vendor
        gfxcard_vendor=$(str_str "$line" "Vendor:")
        if [ ! -z "$gfxcard_vendor" ]; then
            is_gfxcard=1
            gfxcard_vendor=$(sanityse_output_with_quotes "$gfxcard_vendor")
            echo "<item label=\"Fabricant : $gfxcard_vendor\" />"
            ((z++))
        fi
        unset gfxcard_driver
        gfxcard_driver=$(str_str "$line" "Driver:" | sed 's/\", \"/\",\"/g')
        if [ ! -z "$gfxcard_driver" ]; then
            gfxcard_driver=$(sanityse_output "$gfxcard_driver")
        fi
        unset gfxcard_driver_status_all
        gfxcard_driver_status_all=$(str_str "$line" "Driver Status:")
        unset gfxcard_driver_status gfxcard_status
        if [ ! -z "$gfxcard_driver_status_all" ]; then
            unset status
            while read status; do
                unset driver_new
                if [[ "$status" =~ "is active" ]]; then
                    driver_new=$(echo "$status" | sed 's/is active//g')
                    driver_new=$(sanityse_output "$driver_new")
                    gfxcard_driver_status=$(echo "$gfxcard_driver_status,$driver_new")
                    gfxcard_status=$(echo "$gfxcard_status,$driver_new actif")
                elif [[ "$status" =~ "are active" ]]; then
                    driver_new=$(echo "$status" | sed 's/are active//g')
                    driver_new=$(sanityse_output "$driver_new")
                    gfxcard_driver_status=$(echo "$gfxcard_driver_status,$driver_new")
                    gfxcard_status=$(echo "$gfxcard_status,$driver_new actifs")
                elif [[ "$status" =~ "is not active" ]]; then
                    driver_new=$(echo "$status" | sed 's/is not active//g')
                    driver_new=$(sanityse_output "$driver_new")
                    gfxcard_driver_status=$(echo "$gfxcard_driver_status,$driver_new")
                    gfxcard_status=$(echo "$gfxcard_status,$driver_new inactif")
                elif [[ "$status" =~ "are not active" ]]; then
                    driver_new=$(echo "$status" | sed 's/are not active//g')
                    driver_new=$(sanityse_output "$driver_new")
                    gfxcard_driver_status=$(echo "$gfxcard_driver_status,$driver_new")
                    gfxcard_status=$(echo "$gfxcard_status,$driver_new inactifs")
                fi
                gfxcard_driver_status=$(echo "$gfxcard_driver_status" | sed -e 's/^[,]*//')
                gfxcard_status=$(echo "$gfxcard_status" | sed -e 's/^[,]*//')
            done <<< "$gfxcard_driver_status_all"
        fi
        unset gfxcard_driver_modules
        gfxcard_driver_modules=$(str_str "$line" "Driver Modules:")
        if [ ! -z "$gfxcard_driver_modules" ]; then
            gfxcard_driver_modules=$(sanityse_output "$gfxcard_driver_modules")
        fi
        if [ -z "$gfxcard_driver" ] && [ ! -z "$gfxcard_driver_status" ]; then
            is_gfxcard=1
            echo "<item label=\"Driver(s) : $gfxcard_driver_status\" />"
            ((z++))
        elif [ ! -z "$gfxcard_driver" ] && [ -z "$gfxcard_driver_status" ]; then
            is_gfxcard=1
            echo "<item label=\"Driver(s) : $gfxcard_driver\" />"
            ((z++))
        elif [ ! -z "$gfxcard_driver" ] && [ ! -z "$gfxcard_driver_status" ] && [ "$gfxcard_driver" == "$gfxcard_driver_status" ]; then
            is_gfxcard=1
            echo "<item label=\"Driver(s) : $gfxcard_driver\" />"
            ((z++))
        elif [ ! -z "$gfxcard_driver" ] && [ ! -z "$gfxcard_driver_status" ] && [ "$gfxcard_driver" != "$gfxcard_driver_status" ]; then
            is_gfxcard=1
            gfxcard_driver=$(echo "$gfxcard_driver ($gfxcard_driver_status)")
            echo "<item label=\"Driver(s) : $gfxcard_driver\" />"
            ((z++))
        fi
        if [ ! -z "$gfxcard_driver_modules" ]; then
            is_gfxcard=1
            echo "<item label=\"Module(s) : $gfxcard_driver_modules\" />"
            ((z++))
        fi
        if [ ! -z "$gfxcard_status" ]; then
            is_gfxcard=1
            echo "<item label=\"État : $gfxcard_status\" />"
            ((z++))
        fi
    done <<< "$gfxcards"
    if [ ! -z "$is_gfxcard" ]; then
        echo "<separator />"
        echo "<item label=\"Afficher un aperçu rapide\"><action name=\"Execute\"><command>$(display_file "${default_path}hwinfo --short --gfxcard")</command></action></item>"
        echo "<item label=\"Afficher les informations complètes\"><action name=\"Execute\"><command>$(display_file "${default_path}hwinfo --gfxcard")</command></action></item>"
    fi
fi

if [ -z "$is_gfxcard" ]; then
    echo "<item label=\"Aucune carte graphique détectée.\" />"
fi

echo "</openbox_pipe_menu>"
exit 0
