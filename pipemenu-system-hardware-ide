#!/bin/bash
. pipemenu-default-commands
. pipemenu-system-functions

echo "<openbox_pipe_menu>"

unset is_ide
if [ -e "${default_path}hwinfo" ]; then
    # Requiert l'installation du paquet hwinfo
    unset ides
    ides="$(${default_path}hwinfo --ide | sed -e '$a\ ' | awk -v RS="" -F'\n' -v OFS=" -,-,- " '{$1=$1} 1' | sed -r "s/ +([[:digit:]-]+)$/, \1/; s/ -,-,- +/${end_delimiter}/g" | grep -E '^[0-9]+: ' | sed 's/[^ ]* //' | sed 's/^[^:]*: //g' | sort)"
    ide_nb=0
    while IFS= read -r line; do
        declare -a ide_label
        ide_label[$ide_nb]=$(str_str "$line" " ")
        if [ ! -z "${ide_label[$ide_nb]}" ]; then
            is_ide=1
            ide_label[$ide_nb]=$(sanitize_output "${ide_label[$ide_nb]}")
            if [ "$ide_nb" -eq 0 ] || [ "${ide_label[$ide_nb]}" != "${ide_label[$ide_nb-1]}" ]; then
                echo "<separator label=\"${ide_label[ide_nb]}\" />"
            elif [ "$z" -gt 0 ]; then
                z=0
                echo "<separator />"
            fi
            ((z++))
            ((ide_nb++))
        fi
        unset ide_model
        ide_model=$(str_str "$line" "Model:")
        if [ ! -z "$ide_model" ]; then
            is_ide=1
            ide_model=$(sanitize_output "$ide_model")
            echo "<item label=\"Modèle : $ide_model\" />"
        fi
        unset ide_driver
        ide_driver=$(str_str "$line" "Driver:" | sed 's/\", \"/\",\"/g')
        if [ ! -z "$ide_driver" ]; then
            ide_driver=$(sanitize_output "$ide_driver")
        fi
        unset ide_driver_status_all
        ide_driver_status_all=$(str_str "$line" "Driver Status:")
        unset ide_driver_status ide_status
        if [ ! -z "$ide_driver_status_all" ]; then
            unset status
            while read status; do
                unset driver_new
                if [[ "$status" =~ "is active" ]]; then
                    driver_new=$(echo "$status" | sed 's/is active//g')
                    driver_new=$(sanitize_output "$driver_new")
                    ide_driver_status=$(echo "$ide_driver_status,$driver_new")
                    ide_status=$(echo "$ide_status,$driver_new actif")
                elif [[ "$status" =~ "are active" ]]; then
                    driver_new=$(echo "$status" | sed 's/are active//g')
                    driver_new=$(sanitize_output "$driver_new")
                    ide_driver_status=$(echo "$ide_driver_status,$driver_new")
                    ide_status=$(echo "$ide_status,$driver_new actifs")
                elif [[ "$status" =~ "is not active" ]]; then
                    driver_new=$(echo "$status" | sed 's/is not active//g')
                    driver_new=$(sanitize_output "$driver_new")
                    ide_driver_status=$(echo "$ide_driver_status,$driver_new")
                    ide_status=$(echo "$ide_status,$driver_new inactif")
                elif [[ "$status" =~ "are not active" ]]; then
                    driver_new=$(echo "$status" | sed 's/are not active//g')
                    driver_new=$(sanitize_output "$driver_new")
                    ide_driver_status=$(echo "$ide_driver_status,$driver_new")
                    ide_status=$(echo "$ide_status,$driver_new inactifs")
                fi
                ide_driver_status=$(echo "$ide_driver_status" | sed -e 's/^[,]*//')
                ide_status=$(echo "$ide_status" | sed -e 's/^[,]*//')
            done <<< "$ide_driver_status_all"
        fi
        unset ide_driver_modules
        ide_driver_modules=$(str_str "$line" "Driver Modules:")
        if [ ! -z "$ide_driver_modules" ]; then
            ide_driver_modules=$(sanitize_output "$ide_driver_modules")
        fi
        if [ -z "$ide_driver" ] && [ ! -z "$ide_driver_status" ]; then
            is_ide=1
            echo "<item label=\"Driver(s) : $ide_driver_status\" />"
        elif [ ! -z "$ide_driver" ] && [ -z "$ide_driver_status" ]; then
            is_ide=1
            echo "<item label=\"Driver(s) : $ide_driver\" />"
        elif [ ! -z "$ide_driver" ] && [ ! -z "$ide_driver_status" ] && [ "$ide_driver" == "$ide_driver_status" ]; then
            is_ide=1
            echo "<item label=\"Driver(s) : $ide_driver\" />"
        elif [ ! -z "$ide_driver" ] && [ ! -z "$ide_driver_status" ] && [ "$ide_driver" != "$ide_driver_status" ]; then
            is_ide=1
            ide_driver=$(echo "$ide_driver ($ide_driver_status)")
            echo "<item label=\"Driver(s) : $ide_driver\" />"
        fi
        if [ ! -z "$ide_driver_modules" ]; then
            is_ide=1
            echo "<item label=\"Module(s) : $ide_driver_modules\" />"
        fi
        if [ ! -z "$ide_status" ]; then
            is_ide=1
            echo "<item label=\"État : $ide_status\" />"
        fi
    done <<< "$ides"
    if [ ! -z "$is_ide" ]; then
        echo "<separator />"
        echo "<item label=\"Afficher un aperçu rapide\"><action name=\"Execute\"><command>$(display_file "${default_path}hwinfo --short --ide")</command></action></item>"
        echo "<item label=\"Afficher les informations complètes\"><action name=\"Execute\"><command>$(display_file "${default_path}hwinfo --ide")</command></action></item>"
    fi
fi

if [ -z "$is_ide" ]; then
    echo "<item label=\"Aucun périphérique IDE détecté.\" />"
fi

echo "</openbox_pipe_menu>"
