#!/bin/bash
. pipemenu-default-commands
. pipemenu-system-functions

echo "<openbox_pipe_menu>"

unset is_vpn
if [ -e "${default_path}nmcli" ]; then
    while read -r line; do
        if [[ ! "$line" =~ ^-- ]]; then
            is_vpn=true
        fi
    done < <(${default_path}nmcli -f DEVICE,TYPE con | grep "vpn")
fi

if [ -e "${default_path}ip" ] && [ -z "$is_vpn" ]; then
    is_connection=$(${default_path}ping -q -w 1 -c 1 `${default_path}ip r | grep default | cut -d ' ' -f 3` 2>/dev/null && echo "1" || echo "0")
fi

if [ ! -z "$is_vpn" ] || [ "$is_connection" == "1" ]; then
    ip_wan_dig=("myip.opendns.com @resolver1.opendns.com" "-t txt o-o.myaddr.l.google.com @ns1.google.com" "whoami.akamai.net. @ns1-1.akamaitech.net")
    ip_wan_host=("myip.opendns.com resolver1.opendns.com" "-t txt o-o.myaddr.l.google.com ns1.google.com" "whoami.akamai.net. ns1-1.akamaitech.net")
    ip_wan_curl=("https://ident.me/" "https://ip.tyk.nu/" "https://tnx.nl/ip" "https://wgetip.com/")
    ip_wan_wget=("https://ip.tyk.nu/" "https://icanhazip.com/" "https://ipinfo.io/ip")
    
    # Nombre de tentatives sur le même serveur
    nb_try=2
    # Temps maximum par tentative (avant connection timeout) en secondes
    max_time=20
    
    unset ip_wan
    if [ -e "${default_path}dig" ]; then
        # Requiert l'installation du paquet dnsutils
        z=0
        while [ -z "$ip_wan" ]; do
            ip_wan=$(${default_path}dig +short +time=$max_time +tries=$nb_try ${ip_wan_dig[$z]})
            ((z++))
        done
    elif [ -e "${default_path}host" ]; then
        z=0
        while [ -z "$ip_wan" ]; do
            ip_wan=$(${default_path}host -R $nb_try -W $max_time ${ip_wan_host[$z]} | grep -e "has address" -e "descriptive text" | grep -o "\([0-9]\{1,3\}\.\)\{3\}\([0-9]\{1,3\}\)")
            ((z++))
        done
    elif [ -e "${default_path}curl" ]; then
        z=0
        # Requiert l'installation du paquet curl
        while [ -z "$ip_wan" ]; do
            ip_wan=$(${default_path}curl -s --retry $nb_try --max-time $max_time ${ip_wan_curl[$z]})
            ((z++))
        done
    else
        z=0
        while [ -z "$ip_wan" ]; do
            ip_wan=$(${default_path}wget -t $nb_try -T $max_time ${ip_wan_wget[$z]} -O - -o /dev/null)
            ((z++))
        done
    fi
    if [ ! -z "$ip_wan" ]; then
        ip_wan=$(sanityse_output "$ip_wan")
        echo "<item label=\"$ip_wan\" />"
    else
        echo "<item label=\"L'adresse IP n'a pas pu être récupérée.\" />"
    fi
else
    echo "<item label=\"Aucune connexion détectée.\" />"
fi

echo "</openbox_pipe_menu>"
exit 0
