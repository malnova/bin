#!/bin/dash
. pipemenu-default-commands
. pipemenu-system-functions

echo "<openbox_pipe_menu>"

unset is_vpn
if [ -e "${default_path}nmcli" ]; then
while IFS= read -r line; do
    if echo "$line" | egrep -q '^--'; then
        is_vpn=true
    fi
done <<-EOT
    $(${default_path}nmcli -f DEVICE,TYPE con | grep 'vpn')
EOT
fi

if [ -e "${default_path}ip" ] && [ -z "$is_vpn" ]; then
    is_connection=$(${default_path}ping -q -w 1 -c 1 `${default_path}ip r | grep default | cut -d ' ' -f 3` 2>/dev/null && echo "1" || echo "0")
fi

if [ ! -z "$is_vpn" ] || [ "$is_connection" == "1" ]; then
    # Nombre de tentatives sur le même serveur
    nb_try=2
    # Temps maximum par tentative (avant connection timeout) en secondes
    max_time=20

    unset ip_wan
    if [ -e "${default_path}curl" ]; then
        ip_wan_list="https://ident.me/\nhttps://ip.tyk.nu/\nhttps://wgetip.com/"
        # Requiert l'installation du paquet curl
        ip_wan=$(echo "$ip_wan_list" | while IFS= read -r line; do curl -s --fail --retry $nb_try --max-time $max_time $line; if [ $? -ne 78 ] && [ $? -ne 22 ]; then break; fi; done)
    else
        ip_wan_list="https://ip.tyk.nu/\nhttps://icanhazip.com/\nhttps://ipinfo.io/ip"
        # Requiert l'installation du paquet wget
        ip_wan=$(echo "$ip_wan_list" | while IFS= read -r line; do wget -t $nb_try -T $max_time $line -O - -o /dev/null; if [ $? -eq 0 ]; then break; fi; done)
    fi
    if [ ! -z "$ip_wan" ]; then
        ip_wan=$(sanitize_output "$ip_wan")
        echo "<item label=\"$ip_wan\" />"
    else
        echo "<item label=\"L'adresse IP n'a pas pu être récupérée.\" />"
    fi
else
    echo "<item label=\"Aucune connexion détectée.\" />"
fi

echo "</openbox_pipe_menu>"
