#!/bin/bash

unset device_name devices_str devices is_device
echo "<openbox_pipe_menu>"

# Périphériques à blacklister
# Exemples :
# blacklist='Photosmart'
# blacklist=( 'NAME="sda1"' 'NAME="sda2"' )
# blacklist='NAME="sda[1-3]"'
# blacklist='FSTYPE="ext3"'
# blacklist+='LABEL="secret"' 'PARTLABEL="secret"'
# blacklist+='MOUNTPOINT="/"'
blacklist=( 'NAME="mmcblk0p[0-9]"' 'NAME="lvm"' 'NAME="vgroup"' 'FSTYPE=""' 'MOUNTPOINT="/"' )

# Modifier les options de montage par défaut (!!! noexec déjà par défaut, etc.)
# Exemple : mount_options='--options nosuid,noexec,noatime'
# !!! Comme indiqué dans le manuel, udisksctl (fourni par udisks2) n'accepte
# que des options de montage sécurisées (par ex. il est impossible de monter
# une clé USB avec des droits d'exécution !)
mount_options=''

# Fonction pour tester si une valeur est présente dans un tableau
in_array() {
    local haystack=$1[@]
    local needle=$2
    for i in ${!haystack}; do
        if [[ $i == $needle ]]; then
            return 0
        fi
    done
    return 1
}

allowed_device_types=("part" "crypt" "disk" "rom")

devices=( $(lsblk -plno NAME) )
good_devices=()
for device_name in ${devices[@]}; do
    # Passer les périphériques blacklistés
    for string in ${blacklist[@]}; do
        lsblk -dPno NAME,TYPE,FSTYPE,LABEL,MOUNTPOINT,PARTLABEL "$device_name" | grep -E "$string" >/dev/null 2>&1
        (( $? )) || continue 2
    done
    # Passer les périphériques dont le type ne convient pas
    device_type=$(lsblk -drno TYPE "$device_name")
    if (! in_array allowed_device_types $device_type); then
        continue
    fi
    good_devices+=("$device_name")
done
z=0
for device_name in ${good_devices[@]}; do
    # Vérifier si le disque contient des partitions non montées ou
    # déverrouillées, pour pouvoir être détaché
    unset device_kname device_parent is_removable is_lockable is_detachable subdevices subdevice_name subdevice_fstype subdevice_uuid sub_is_unlocked
    device_kname=$(lsblk -drno KNAME "$device_name")
    device_parent=$(basename "$(readlink -f "/sys/class/block/$device_kname/..")")
    is_removable=$(lsblk -drno RM "$device_name")
    is_lockable=$(lsblk -rno MOUNTPOINT "$device_name")
    if [ "$is_removable" = "1" ] && [[ "$device_kname" == *[0-9] ]]; then
        is_detachable=$(lsblk -rno MOUNTPOINT "/dev/$device_parent")
        is_detachable=$(echo $is_detachable | awk 'NF')
        if [ "$is_detachable" = "$is_lockable" ]; then
            is_detachable=""
        fi
        subdevices=$(lsblk -plno NAME "/dev/$device_parent")
        for subdevice_name in ${subdevices[@]}; do
            subdevice_fstype=$(lsblk -drno FSTYPE "$subdevice_name")
            if [ "$subdevice_fstype" = "crypto_LUKS" ]; then
                subdevice_uuid=$(lsblk -drno UUID "$subdevice_name")
                sub_is_unlocked+=$(test -b /dev/disk/by-id/dm-uuid-*${subdevice_uuid}* && echo "1" || echo "")
            fi
        done
        if [ "$sub_is_unlocked" ]; then
            is_detachable="1"
        fi
    fi
    # Récupérer les informations sur le périphérique
    unset device_str device_type device_fstype device_label device_mountpath device_parent device_size device_uuid is_unlocked
    device_fstype=$(lsblk -drno FSTYPE "$device_name")
    if [ "$device_fstype" != "crypto_LUKS" ] || ([ "$device_fstype" = "crypto_LUKS" ] && [ ! "$is_lockable" ]); then
        is_device=1
        z=$((z+1))
        device_label=$(lsblk -dno LABEL "$device_name")
        device_mountpath=$(findmnt -no TARGET "$device_name")
        device_size=$(lsblk -drno SIZE "$device_name")
        if [ "$device_fstype" = "crypto_LUKS" ]; then
            device_uuid=$(lsblk -drno UUID "$device_name")
            is_unlocked=$(test -b /dev/disk/by-id/dm-uuid-*${device_uuid}* && echo "1" || echo "")
        fi
        # Créer le pipemenu
        if [ "$device_fstype" = "crypto_LUKS" ]; then
            if [ "$is_removable" = "1" ] && [ ! "$is_detachable" ]; then
                if [ "$is_unlocked" ]; then
                    device_str+="<item label=\"Détacher\"><action name=\"Execute\"><command>sh -c 'udisksctl lock --block-device \"$device_name\" && udisksctl power-off --block-device \"$device_name\"'</command></action></item>"
                else
                    device_str+="<item label=\"Détacher\"><action name=\"Execute\"><command>udisksctl power-off --block-device \"$device_name\"</command></action></item>"
                fi
            fi
            if [ "$is_unlocked" ]; then
                device_str+="<item label=\"Verrouiller\"><action name=\"Execute\"><command>udisksctl lock --block-device \"$device_name\"</command></action></item>"
            fi
        else
            if [ "$device_mountpath" ]; then
                if [ "$is_removable" = "1" ] && [ ! "$is_detachable" ]; then
                    device_str+="<item label=\"Détacher\"><action name=\"Execute\"><command>sh -c 'udisksctl unmount --block-device \"$device_name\" && udisksctl power-off --block-device \"$device_name\"'</command></action></item>"
                fi
                device_str+="<item label=\"Démonter\"><action name=\"Execute\"><command>udisksctl unmount --block-device \"$device_name\"</command></action></item>"
            else
                if [ "$is_removable" = "1" ] && [ ! "$is_detachable" ]; then
                    device_str+="<item label=\"Détacher\"><action name=\"Execute\"><command>udisksctl power-off --block-device \"$device_name\"</command></action></item>"
                fi
                device_str+="<item label=\"Monter\"><action name=\"Execute\"><command>udisksctl mount $mount_options --block-device \"$device_name\"</command></action></item>"
            fi
        fi
        if [ "$device_str" ]; then
            if [ -z "$device_label" ]; then
                devices_str+="<menu id=\"device$z\" label=\"$device_name ($device_size)\">"
            else
                devices_str+="<menu id=\"device$z\" label=\"$device_name ($device_size ; $device_label)\">"
            fi
            devices_str+="$device_str</menu>"
        else
            if [ -z "$device_label" ]; then
                devices_str+="<item label=\"$device_name ($device_size)\" />"
            else
                devices_str+="<item label=\"$device_name ($device_size ; $device_label)\" />"
            fi
        fi
    fi
done

if [ -z "$is_device" ]; then
    echo "<item label=\"Aucun périphérique détecté.\" />"
else
    devices_str=$(echo "$devices_str" | sed 's/_/__/g' | sed 's/&/&amp;/g')
    echo $devices_str
fi

echo "</openbox_pipe_menu>"
