#!/bin/bash
. pipemenu-default-commands
. pipemenu-system-functions

echo "<openbox_pipe_menu>"

unset is_usb
if [ -e "${default_path}hwinfo" ]; then
    # Requiert l'installation du paquet hwinfo
    unset usbs
    usbs="$(${default_path}hwinfo --usb | sed -e '$a\ ' | awk -v RS="" -F'\n' -v OFS=" -,-,- " '{$1=$1} 1' | sed -r "s/ +([[:digit:]-]+)$/, \1/; s/ -,-,- +/${end_delimiter}/g" | grep -E '^[0-9]+: ' | sed 's/[^ ]* //' | sed 's/^[^:]*: //g' | sort)"
    usb_nb=0
    while IFS= read -r line; do
        declare -a usb_label
        usb_label[$usb_nb]=$(str_str "$line" " ")
        if [ ! -z "${usb_label[$usb_nb]}" ]; then
            is_usb=1
            usb_label[$usb_nb]=$(sanitize_output "${usb_label[$usb_nb]}")
            if [ "$usb_nb" -eq 0 ] || [ "${usb_label[$usb_nb]}" != "${usb_label[$usb_nb-1]}" ]; then
                echo "<separator label=\"${usb_label[usb_nb]}\" />"
            elif [ "$z" -gt 0 ]; then
                z=0
                echo "<separator />"
            fi
            z=$((z+1))
            usb_nb=$((usb_nb+1))
        fi
        unset usb_model
        usb_model=$(str_str "$line" "Model:")
        if [ ! -z "$usb_model" ]; then
            is_usb=1
            usb_model=$(sanitize_output "$usb_model")
            echo "<item label=\"Modèle : $usb_model\" />"
        fi
        unset usb_speed
        usb_speed=$(str_str "$line" "Speed:")
        if [ -z "$usb_speed" ]; then
            unset usb_bus_id
            usb_bus_id=$(str_str "$line" "SysFS BusID:")
            usb_bus_id=$(echo $usb_bus_id | grep -ioP "^[0-9]+")
            if [ ! -z "$usb_bus_id" ]; then
                usb_speed=$(cat /sys/bus/usb/devices/usb${usb_bus_id}/speed 2>/dev/null)
            fi
        fi
        if [ ! -z "$usb_speed" ]; then
            is_usb=1
            usb_speed=$(sanitize_output "$usb_speed")
            if [[ $usb_speed =~ ^[0-9]+$ ]]; then
                usb_speed=$(echo "${usb_speed} Mbps")
            fi
            if [[ "$usb_speed" =~ "1.5" ]]; then
                usb_speed="$usb_speed (USB 1.0)"
            elif [[ "$usb_speed" =~ "12" ]]; then
                usb_speed="$usb_speed (USB 1.1)"
            elif [[ "$usb_speed" =~ "480" ]]; then
                usb_speed="$usb_speed (USB 2.0)"
            elif [[ "$usb_speed" =~ "5000" ]]; then
                usb_speed="$usb_speed (USB 3.0)"
            elif [[ "$usb_speed" =~ "10000" ]]; then
                usb_speed="$usb_speed (USB 3.1)"
            fi
            echo "<item label=\"Vitesse : $usb_speed\" />"
        fi
        unset usb_driver
        usb_driver=$(str_str "$line" "Driver:" | sed 's/\", \"/\",\"/g')
        if [ ! -z "$usb_driver" ]; then
            usb_driver=$(sanitize_output "$usb_driver")
        fi
        unset usb_driver_status_all
        usb_driver_status_all=$(str_str "$line" "Driver Status:")
        unset usb_driver_status usb_status
        if [ ! -z "$usb_driver_status_all" ]; then
            unset status
            while read status; do
                unset driver_new
                if [[ "$status" =~ "is active" ]]; then
                    driver_new=$(echo "$status" | sed 's/is active//g')
                    driver_new=$(sanitize_output "$driver_new")
                    usb_driver_status=$(echo "$usb_driver_status,$driver_new")
                    usb_status=$(echo "$usb_status,$driver_new actif")
                elif [[ "$status" =~ "are active" ]]; then
                    driver_new=$(echo "$status" | sed 's/are active//g')
                    driver_new=$(sanitize_output "$driver_new")
                    usb_driver_status=$(echo "$usb_driver_status,$driver_new")
                    usb_status=$(echo "$usb_status,$driver_new actifs")
                elif [[ "$status" =~ "is not active" ]]; then
                    driver_new=$(echo "$status" | sed 's/is not active//g')
                    driver_new=$(sanitize_output "$driver_new")
                    usb_driver_status=$(echo "$usb_driver_status,$driver_new")
                    usb_status=$(echo "$usb_status,$driver_new inactif")
                elif [[ "$status" =~ "are not active" ]]; then
                    driver_new=$(echo "$status" | sed 's/are not active//g')
                    driver_new=$(sanitize_output "$driver_new")
                    usb_driver_status=$(echo "$usb_driver_status,$driver_new")
                    usb_status=$(echo "$usb_status,$driver_new inactifs")
                fi
                usb_driver_status=$(echo "$usb_driver_status" | sed -e 's/^[,]*//')
                usb_status=$(echo "$usb_status" | sed -e 's/^[,]*//')
            done <<< "$usb_driver_status_all"
        fi
        unset usb_driver_modules
        usb_driver_modules=$(str_str "$line" "Driver Modules:")
        if [ ! -z "$usb_driver_modules" ]; then
            usb_driver_modules=$(sanitize_output "$usb_driver_modules")
        fi
        if [ -z "$usb_driver" ] && [ ! -z "$usb_driver_status" ]; then
            is_usb=1
            echo "<item label=\"Driver(s) : $usb_driver_status\" />"
        elif [ ! -z "$usb_driver" ] && [ -z "$usb_driver_status" ]; then
            is_usb=1
            echo "<item label=\"Driver(s) : $usb_driver\" />"
        elif [ ! -z "$usb_driver" ] && [ ! -z "$usb_driver_status" ] && [ "$usb_driver" == "$usb_driver_status" ]; then
            is_usb=1
            echo "<item label=\"Driver(s) : $usb_driver\" />"
        elif [ ! -z "$usb_driver" ] && [ ! -z "$usb_driver_status" ] && [ "$usb_driver" != "$usb_driver_status" ]; then
            is_usb=1
            usb_driver=$(echo "$usb_driver ($usb_driver_status)")
            echo "<item label=\"Driver(s) : $usb_driver\" />"
        fi
        if [ ! -z "$usb_driver_modules" ]; then
            is_usb=1
            echo "<item label=\"Module(s) : $usb_driver_modules\" />"
        fi
        if [ ! -z "$usb_status" ]; then
            is_usb=1
            echo "<item label=\"État : $usb_status\" />"
        fi
    done <<< "$usbs"
    if [ ! -z "$is_usb" ]; then
        echo "<separator />"
        echo "<item label=\"Afficher un aperçu rapide\"><action name=\"Execute\"><command>$(display_file "${default_path}hwinfo --short --usb")</command></action></item>"
        echo "<item label=\"Afficher les informations complètes\"><action name=\"Execute\"><command>$(display_file "${default_path}hwinfo --usb")</command></action></item>"
    fi
fi

if [ -z "$is_usb" ]; then
    echo "<item label=\"Aucun périphérique USB détecté.\" />"
fi

echo "</openbox_pipe_menu>"
