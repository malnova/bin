#!/bin/bash
. pipemenu-default-commands
. pipemenu-system-functions

echo "<openbox_pipe_menu>"

unset is_pcmcia
if [ -e "${default_path}hwinfo" ]; then
    # Requiert l'installation du paquet hwinfo
    unset pcmcias
    pcmcias="$(${default_path}hwinfo --pcmcia | sed -e '$a\ ' | awk -v RS="" -F'\n' -v OFS=" -,-,- " '{$1=$1} 1' | sed -r "s/ +([[:digit:]-]+)$/, \1/; s/ -,-,- +/${end_delimiter}/g" | grep -E '^[0-9]+: ' | sed 's/[^ ]* //' | sed 's/^[^:]*: //g' | sort)"
    pcmcia_nb=0
    while IFS= read -r line; do
        declare -a pcmcia_label
        pcmcia_label[$pcmcia_nb]=$(str_str "$line" " ")
        if [ ! -z "${pcmcia_label[$pcmcia_nb]}" ]; then
            is_pcmcia=1
            pcmcia_label[$pcmcia_nb]=$(sanitize_output "${pcmcia_label[$pcmcia_nb]}")
            if [ "$pcmcia_nb" -eq 0 ] || [ "${pcmcia_label[$pcmcia_nb]}" != "${pcmcia_label[$pcmcia_nb-1]}" ]; then
                echo "<separator label=\"${pcmcia_label[pcmcia_nb]}\" />"
            elif [ "$z" -gt 0 ]; then
                z=0
                echo "<separator />"
            fi
            ((z++))
            ((pcmcia_nb++))
        fi
        unset pcmcia_model
        pcmcia_model=$(str_str "$line" "Model:")
        if [ ! -z "$pcmcia_model" ]; then
            is_pcmcia=1
            pcmcia_model=$(sanitize_output "$pcmcia_model")
            echo "<item label=\"Modèle : $pcmcia_model\" />"
        fi
        unset pcmcia_driver
        pcmcia_driver=$(str_str "$line" "Driver:" | sed 's/\", \"/\",\"/g')
        if [ ! -z "$pcmcia_driver" ]; then
            pcmcia_driver=$(sanitize_output "$pcmcia_driver")
        fi
        unset pcmcia_driver_status_all
        pcmcia_driver_status_all=$(str_str "$line" "Driver Status:")
        unset pcmcia_driver_status pcmcia_status
        if [ ! -z "$pcmcia_driver_status_all" ]; then
            unset status
            while read status; do
                unset driver_new
                if [[ "$status" =~ "is active" ]]; then
                    driver_new=$(echo "$status" | sed 's/is active//g')
                    driver_new=$(sanitize_output "$driver_new")
                    pcmcia_driver_status=$(echo "$pcmcia_driver_status,$driver_new")
                    pcmcia_status=$(echo "$pcmcia_status,$driver_new actif")
                elif [[ "$status" =~ "are active" ]]; then
                    driver_new=$(echo "$status" | sed 's/are active//g')
                    driver_new=$(sanitize_output "$driver_new")
                    pcmcia_driver_status=$(echo "$pcmcia_driver_status,$driver_new")
                    pcmcia_status=$(echo "$pcmcia_status,$driver_new actifs")
                elif [[ "$status" =~ "is not active" ]]; then
                    driver_new=$(echo "$status" | sed 's/is not active//g')
                    driver_new=$(sanitize_output "$driver_new")
                    pcmcia_driver_status=$(echo "$pcmcia_driver_status,$driver_new")
                    pcmcia_status=$(echo "$pcmcia_status,$driver_new inactif")
                elif [[ "$status" =~ "are not active" ]]; then
                    driver_new=$(echo "$status" | sed 's/are not active//g')
                    driver_new=$(sanitize_output "$driver_new")
                    pcmcia_driver_status=$(echo "$pcmcia_driver_status,$driver_new")
                    pcmcia_status=$(echo "$pcmcia_status,$driver_new inactifs")
                fi
                pcmcia_driver_status=$(echo "$pcmcia_driver_status" | sed -e 's/^[,]*//')
                pcmcia_status=$(echo "$pcmcia_status" | sed -e 's/^[,]*//')
            done <<< "$pcmcia_driver_status_all"
        fi
        unset pcmcia_driver_modules
        pcmcia_driver_modules=$(str_str "$line" "Driver Modules:")
        if [ ! -z "$pcmcia_driver_modules" ]; then
            pcmcia_driver_modules=$(sanitize_output "$pcmcia_driver_modules")
        fi
        if [ -z "$pcmcia_driver" ] && [ ! -z "$pcmcia_driver_status" ]; then
            is_pcmcia=1
            echo "<item label=\"Driver(s) : $pcmcia_driver_status\" />"
        elif [ ! -z "$pcmcia_driver" ] && [ -z "$pcmcia_driver_status" ]; then
            is_pcmcia=1
            echo "<item label=\"Driver(s) : $pcmcia_driver\" />"
        elif [ ! -z "$pcmcia_driver" ] && [ ! -z "$pcmcia_driver_status" ] && [ "$pcmcia_driver" == "$pcmcia_driver_status" ]; then
            is_pcmcia=1
            echo "<item label=\"Driver(s) : $pcmcia_driver\" />"
        elif [ ! -z "$pcmcia_driver" ] && [ ! -z "$pcmcia_driver_status" ] && [ "$pcmcia_driver" != "$pcmcia_driver_status" ]; then
            is_pcmcia=1
            pcmcia_driver=$(echo "$pcmcia_driver ($pcmcia_driver_status)")
            echo "<item label=\"Driver(s) : $pcmcia_driver\" />"
        fi
        if [ ! -z "$pcmcia_driver_modules" ]; then
            is_pcmcia=1
            echo "<item label=\"Module(s) : $pcmcia_driver_modules\" />"
        fi
        if [ ! -z "$pcmcia_status" ]; then
            is_pcmcia=1
            echo "<item label=\"État : $pcmcia_status\" />"
        fi
    done <<< "$pcmcias"
    if [ ! -z "$is_pcmcia" ]; then
        echo "<separator />"
        echo "<item label=\"Afficher un aperçu rapide\"><action name=\"Execute\"><command>$(display_file "${default_path}hwinfo --short --pcmcia")</command></action></item>"
        echo "<item label=\"Afficher les informations complètes\"><action name=\"Execute\"><command>$(display_file "${default_path}hwinfo --pcmcia")</command></action></item>"
    fi
fi

if [ -z "$is_pcmcia" ]; then
    echo "<item label=\"Aucun périphérique PCMCIA détecté.\" />"
fi

echo "</openbox_pipe_menu>"
