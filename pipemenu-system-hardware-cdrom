#!/bin/bash
. pipemenu-default-commands
. pipemenu-system-functions

echo "<openbox_pipe_menu>"

unset is_cdrom
if [ -e "${default_path}hwinfo" ]; then
    # Requiert l'installation du paquet hwinfo
    unset cdroms
    cdroms="$(${default_path}hwinfo --cdrom | sed -e '$a\ ' | awk -v RS="" -F'\n' -v OFS=" -,-,- " '{$1=$1} 1' | sed -r "s/ +([[:digit:]-]+)$/, \1/; s/ -,-,- +/${end_delimiter}/g" | grep -E '^[0-9]+: ' | sed 's/[^ ]* //' | sort)"
    cdrom_nb=0
    while IFS= read -r line; do
        declare -a cdrom_connector
        cdrom_connector[$cdrom_nb]=$(echo "$line" | grep -ioP '^\s*\K.*' | awk '{print $1}')
        if [ ! -z "${cdrom_connector[$cdrom_nb]}" ]; then
            is_cdrom=1
            cdrom_connector[$cdrom_nb]=$(sanityse_output "${cdrom_connector[$cdrom_nb]}")
            if [ "$cdrom_nb" -eq 0 ] || [ "${cdrom_connector[$cdrom_nb]}" != "${cdrom_connector[$cdrom_nb-1]}" ]; then
                echo "<separator label=\"Port ${cdrom_connector[cdrom_nb]}\" />"
            elif [ "$z" -gt 0 ]; then
                z=0
                echo "<separator />"
            fi
            ((z++))
            ((cdrom_nb++))
        fi
        unset cdrom_model
        cdrom_model=$(str_str "$line" "Model:")
        if [ ! -z "$cdrom_model" ]; then
            is_cdrom=1
            cdrom_model=$(sanityse_output "$cdrom_model")
            echo "<item label=\"Modèle : $cdrom_model\" />"
            ((z++))
        fi
        unset cdrom_vendor
        cdrom_vendor=$(str_str "$line" "Vendor:")
        if [ ! -z "$cdrom_vendor" ]; then
            is_cdrom=1
            cdrom_vendor=$(sanityse_output_with_quotes "$cdrom_vendor")
            echo "<item label=\"Fabricant : $cdrom_vendor\" />"
            ((z++))
        fi
        unset cdrom_device_file
        cdrom_device_file=$(str_str "$line" "Device File:")
        if [ ! -z "$cdrom_device_file" ]; then
            is_cdrom=1
            cdrom_device_file=$(sanityse_output "$cdrom_device_file")
            echo "<item label=\"Fichier : $cdrom_device_file\" />"
            ((z++))
        fi
        unset cdrom_speed
        cdrom_speed=$(str_str "$line" "Drive Speed:")
        if [ ! -z "$cdrom_speed" ]; then
            is_cdrom=1
            cdrom_speed=$(sanityse_output "$cdrom_speed")
            if [[ $cdrom_speed =~ ^[0-9]+$ ]]; then
                cdrom_speed=$(echo "${cdrom_speed}X")
            fi
            echo "<item label=\"Vitesse : $cdrom_speed\" />"
            ((z++))
        fi
        unset cdrom_features
        cdrom_features=$(str_str "$line" "Features:")
        if [ ! -z "$cdrom_features" ]; then
            is_cdrom=1
            cdrom_features=$(sanityse_output "$cdrom_features")
            echo "<item label=\"Compatibilité : $cdrom_features\" />"
            ((z++))
        fi
        unset cdrom_status
        cdrom_status=$(str_str "$line" "Drive status:")
        if [ ! -z "$cdrom_status" ]; then
            is_cdrom=1
            cdrom_status=$(sanityse_output "$cdrom_status")
            echo "<item label=\"Statut : $cdrom_status\" />"
            ((z++))
        fi
        unset cdrom_volume_id
        cdrom_volume_id=$(str_str "$line" "Volume ID:")
        if [ ! -z "$cdrom_volume_id" ]; then
            is_cdrom=1
            cdrom_volume_id=$(sanityse_output "$cdrom_volume_id")
            echo "<item label=\"Disque : $cdrom_volume_id\" />"
            ((z++))
        fi
        unset cdrom_application
        cdrom_application=$(str_str "$line" "Application:")
        if [ ! -z "$cdrom_application" ]; then
            is_cdrom=1
            cdrom_application=$(sanityse_output "$cdrom_application")
            echo "<item label=\"Application : $cdrom_application\" />"
            ((z++))
        fi
        unset cdrom_date
        cdrom_date=$(str_str "$line" "Creation date:")
        if [ ! -z "$cdrom_date" ]; then
            is_cdrom=1
            cdrom_date_year=$(echo "$cdrom_date" | grep -oP '[0-9]{4}' | head -n1)
            cdrom_date_month=$(echo "$cdrom_date" | grep -oP '([0-9]{4})\K([0-9]{2})' | head -n1)
            cdrom_date_day=$(echo "$cdrom_date" | grep -oP '([0-9]{6})\K([0-9]{2})' | head -n1)
            echo "<item label=\"Date : $cdrom_date_day/$cdrom_date_month/$cdrom_date_year\" />"
            ((z++))
        fi
        unset cdrom_driver
        cdrom_driver=$(str_str "$line" "Driver:" | sed 's/\", \"/\",\"/g')
        if [ ! -z "$cdrom_driver" ]; then
            cdrom_driver=$(sanityse_output "$cdrom_driver")
        fi
        unset cdrom_driver_status_all
        cdrom_driver_status_all=$(str_str "$line" "Driver Status:")
        unset cdrom_driver_status cdrom_status
        if [ ! -z "$cdrom_driver_status_all" ]; then
            unset status
            while read status; do
                unset driver_new
                if [[ "$status" =~ "is active" ]]; then
                    driver_new=$(echo "$status" | sed 's/is active//g')
                    driver_new=$(sanityse_output "$driver_new")
                    cdrom_driver_status=$(echo "$cdrom_driver_status,$driver_new")
                    cdrom_status=$(echo "$cdrom_status,$driver_new actif")
                elif [[ "$status" =~ "are active" ]]; then
                    driver_new=$(echo "$status" | sed 's/are active//g')
                    driver_new=$(sanityse_output "$driver_new")
                    cdrom_driver_status=$(echo "$cdrom_driver_status,$driver_new")
                    cdrom_status=$(echo "$cdrom_status,$driver_new actifs")
                elif [[ "$status" =~ "is not active" ]]; then
                    driver_new=$(echo "$status" | sed 's/is not active//g')
                    driver_new=$(sanityse_output "$driver_new")
                    cdrom_driver_status=$(echo "$cdrom_driver_status,$driver_new")
                    cdrom_status=$(echo "$cdrom_status,$driver_new inactif")
                elif [[ "$status" =~ "are not active" ]]; then
                    driver_new=$(echo "$status" | sed 's/are not active//g')
                    driver_new=$(sanityse_output "$driver_new")
                    cdrom_driver_status=$(echo "$cdrom_driver_status,$driver_new")
                    cdrom_status=$(echo "$cdrom_status,$driver_new inactifs")
                fi
                cdrom_driver_status=$(echo "$cdrom_driver_status" | sed -e 's/^[,]*//')
                cdrom_status=$(echo "$cdrom_status" | sed -e 's/^[,]*//')
            done <<< "$cdrom_driver_status_all"
        fi
        unset cdrom_driver_modules
        cdrom_driver_modules=$(str_str "$line" "Driver Modules:")
        if [ ! -z "$cdrom_driver_modules" ]; then
            cdrom_driver_modules=$(sanityse_output "$cdrom_driver_modules")
        fi
        if [ -z "$cdrom_driver" ] && [ ! -z "$cdrom_driver_status" ]; then
            is_cdrom=1
            echo "<item label=\"Driver(s) : $cdrom_driver_status\" />"
            ((z++))
        elif [ ! -z "$cdrom_driver" ] && [ -z "$cdrom_driver_status" ]; then
            is_cdrom=1
            echo "<item label=\"Driver(s) : $cdrom_driver\" />"
            ((z++))
        elif [ ! -z "$cdrom_driver" ] && [ ! -z "$cdrom_driver_status" ] && [ "$cdrom_driver" == "$cdrom_driver_status" ]; then
            is_cdrom=1
            echo "<item label=\"Driver(s) : $cdrom_driver\" />"
            ((z++))
        elif [ ! -z "$cdrom_driver" ] && [ ! -z "$cdrom_driver_status" ] && [ "$cdrom_driver" != "$cdrom_driver_status" ]; then
            is_cdrom=1
            cdrom_driver=$(echo "$cdrom_driver ($cdrom_driver_status)")
            echo "<item label=\"Driver(s) : $cdrom_driver\" />"
            ((z++))
        fi
        if [ ! -z "$cdrom_driver_modules" ]; then
            is_cdrom=1
            echo "<item label=\"Module(s) : $cdrom_driver_modules\" />"
            ((z++))
        fi
        if [ ! -z "$cdrom_status" ]; then
            is_cdrom=1
            echo "<item label=\"État : $cdrom_status\" />"
            ((z++))
        fi
    done <<< "$cdroms"
    if [ ! -z "$is_cdrom" ]; then
        echo "<separator />"
        echo "<item label=\"Afficher un aperçu rapide\"><action name=\"Execute\"><command>$(display_file "${default_path}hwinfo --short --cdrom")</command></action></item>"
        echo "<item label=\"Afficher les informations complètes\"><action name=\"Execute\"><command>$(display_file "${default_path}hwinfo --cdrom")</command></action></item>"
    fi
fi

if [ -z "$is_cdrom" ]; then
    echo "<item label=\"Aucun lecteur détecté.\" />"
fi

echo "</openbox_pipe_menu>"
